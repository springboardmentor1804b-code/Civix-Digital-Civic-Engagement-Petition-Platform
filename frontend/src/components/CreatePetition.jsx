import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { useAuth } from "../context/AuthContext";
import { toast } from "react-toastify";
import api from "../Utils/api";

const PETITION_CATEGORIES = [
Â  "Environment",
Â  "Infrastructure",
Â  "Education",
Â  "Public Safety",
Â  "Transportation",
Â  "Healthcare",
Â  "Housing",
Â  "Other",
];

const CreatePetition = () => {
Â  const { user } = useAuth();
Â  const navigate = useNavigate();
Â  
Â  // 1. Text/Number Form State
Â  const [formData, setFormData] = useState({
Â  Â  title: "",
Â  Â  category: PETITION_CATEGORIES[0],
Â  Â  location: user?.location || "",
Â  Â  signatureGoal: 100,
Â  Â  description: "",
Â  });
    // ðŸ’¡ NEW: State for selected files
    const [enclosures, setEnclosures] = useState([]);
    
Â  const [isSubmitting, setIsSubmitting] = useState(false);

Â  const handleChange = (e) => {
Â  Â  const { name, value } = e.target;
Â  Â  setFormData({ ...formData, [name]: value });
Â  };
    
    // ðŸ’¡ NEW: Handle file selection
    const handleFileChange = (e) => {
        // Limit to 5 files, matching the backend limit
        const selectedFiles = Array.from(e.target.files).slice(0, 5); 
        setEnclosures(selectedFiles);
    };

Â  const handleSubmit = async (e) => {
Â  Â  e.preventDefault();
Â  Â  setIsSubmitting(true);
    
    // ðŸ’¡ UPDATE 1: Use FormData to send files and text
    const data = new FormData();
    
    // Append text fields
    Object.keys(formData).forEach(key => {
        data.append(key, formData[key]);
    });

    // ðŸ’¡ UPDATE 2: Append each selected file using the field name 'enclosures'
    // This MUST match the name used in petitionRoutes.js (upload.array('enclosures', 5))
    enclosures.forEach(file => {
        data.append('enclosures', file);
    });

Â  Â  try {
        // ðŸ’¡ UPDATE 3: Send the FormData object. Axios/API client will automatically 
        // set the necessary 'multipart/form-data' header.
Â  Â  Â  Â  const res = await api.post("/petitions/create", data); 

Â  Â  Â  if (res.status === 201) {
Â  Â  Â  Â  toast.success("Petition created successfully!");
Â  Â  Â  Â  navigate("/petitions");
Â  Â  Â  }
Â  Â  } catch (err) {
Â  Â  Â  const errorMessage =
Â  Â  Â  Â  err.response?.data?.message || "Could not create petition.";
        // Optional: If Multer rejects a file, the message will be in err.response.data
Â  Â  Â  toast.error(errorMessage);
Â  Â  } finally {
Â  Â  Â  setIsSubmitting(false);
Â  Â  }
Â  };

Â  return (
Â  Â  <div className="p-4 md:p-6 max-w-4xl mx-auto">
Â  Â  Â  <h1 className="text-2xl font-semibold text-[#2D3E50] mb-6">
Â  Â  Â  Â  Petition Creation
Â  Â  Â  </h1>
Â  Â  Â  <form
Â  Â  Â  Â  onSubmit={handleSubmit}
Â  Â  Â  Â  className="bg-white shadow-md rounded-lg p-6"
        // NOTE: The encoding type is not strictly needed for fetch/axios with FormData, 
        // but it's good practice for clarity in traditional forms.
Â  Â  Â  >
Â  Â  Â  Â  <div className="flex items-center mb-6">
Â  Â  Â  Â  Â  <svg
Â  Â  Â  Â  Â  Â  className="w-6 h-6 text-[#E84C3D] mr-2"
Â  Â  Â  Â  Â  Â  fill="none"
Â  Â  Â  Â  Â  Â  stroke="currentColor"
Â  Â  Â  Â  Â  Â  strokeWidth="2"
Â  Â  Â  Â  Â  Â  viewBox="0 0 24 24"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <path d="M12 20h9M12 4h9M4 9h16M4 15h16" />
Â  Â  Â  Â  Â  </svg>
Â  Â  Â  Â  Â  <h2 className="text-xl font-semibold text-[#2D3E50]">
Â  Â  Â  Â  Â  Â  Create a New Petition
Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  </div>
Â  Â  Â  Â  <p className="text-gray-600 mb-6">
Â  Â  Â  Â  Â  Complete the form below to create a petition in your community.
Â  Â  Â  Â  </p>

Â  Â  Â  Â  {/* Petition Title */}
Â  Â  Â  Â  <div className="mb-4">
Â  Â  Â  Â  Â  <label
Â  Â  Â  Â  Â  Â  className="block text-[#2D3E50] font-medium mb-1"
Â  Â  Â  Â  Â  Â  htmlFor="title"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Petition Title
Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  id="title"
Â  Â  Â  Â  Â  Â  name="title"
Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  placeholder="Give your petition a clear, specific title"
Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#E84C3D]"
Â  Â  Â  Â  Â  Â  value={formData.title}
Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {/* Category & Location */}
Â  Â  Â  Â  <div className="grid md:grid-cols-2 gap-4 mb-4">
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label
Â  Â  Â  Â  Â  Â  Â  className="block text-[#2D3E50] font-medium mb-1"
Â  Â  Â  Â  Â  Â  Â  htmlFor="category"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Category
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <select
Â  Â  Â  Â  Â  Â  Â  id="category"
Â  Â  Â  Â  Â  Â  Â  name="category"
Â  Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#E84C3D]"
Â  Â  Â  Â  Â  Â  Â  value={formData.category}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {PETITION_CATEGORIES.map((cat) => (
Â  Â  Â  Â  Â  Â  Â  Â  <option key={cat} value={cat}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  {cat}
Â  Â  Â  Â  Â  Â  Â  Â  </option>
Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label
Â  Â  Â  Â  Â  Â  Â  className="block text-[#2D3E50] font-medium mb-1"
Â  Â  Â  Â  Â  Â  Â  htmlFor="location"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Location
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  id="location"
Â  Â  Â  Â  Â  Â  Â  name="location"
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#E84C3D]"
Â  Â  Â  Â  Â  Â  Â  value={formData.location}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {/* Signature Goal */}
Â  Â  Â  Â  <div className="mb-4">
Â  Â  Â  Â  Â  <label
Â  Â  Â  Â  Â  Â  className="block text-[#2D3E50] font-medium mb-1"
Â  Â  Â  Â  Â  Â  htmlFor="signatureGoal"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Signature Goal
Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  id="signatureGoal"
Â  Â  Â  Â  Â  Â  name="signatureGoal"
Â  Â  Â  Â  Â  Â  type="number"
Â  Â  Â  Â  Â  Â  min="1"
Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#E84C3D]"
Â  Â  Â  Â  Â  Â  value={formData.signatureGoal}
Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {/* Description */}
Â  Â  Â  Â  <div className="mb-6">
Â  Â  Â  Â  Â  <label
Â  Â  Â  Â  Â  Â  className="block text-[#2D3E50] font-medium mb-1"
Â  Â  Â  Â  Â  Â  htmlFor="description"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Description
Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  id="description"
Â  Â  Â  Â  Â  Â  name="description"
Â  Â  Â  Â  Â  Â  rows="4"
Â  Â  Â  Â  Â  Â  placeholder="Describe the issue and the change you'd like to see..."
Â  Â  Â  Â  Â  Â  className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-[#E84C3D]"
Â  Â  Â  Â  Â  Â  value={formData.description}
Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  ></textarea>
Â  Â  Â  Â  </div>
        
        {/* ðŸ’¡ NEW: Enclosure Upload Field */}
        <div className="mb-6">
            <label
Â  Â  Â  Â  Â  Â  Â  className="block text-[#2D3E50] font-medium mb-1"
Â  Â  Â  Â  Â  Â  Â  htmlFor="enclosures"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Supporting Files (Images/Documents)
Â  Â  Â  Â  Â  Â  </label>
            <input
Â  Â  Â  Â  Â  Â  Â  id="enclosures"
Â  Â  Â  Â  Â  Â  Â  name="enclosures"
Â  Â  Â  Â  Â  Â  Â  type="file"
              multiple // Allows multiple file selection
              accept="image/*, application/pdf, .doc, .docx" // Suggested file types
              onChange={handleFileChange}
              className="w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-gray-100 file:text-[#2D3E50] hover:file:bg-gray-200"
Â  Â  Â  Â  Â  Â  />
            {enclosures.length > 0 && (
                <p className="text-xs text-gray-500 mt-2">
                    {enclosures.length} file(s) selected. Max 5 allowed.
                </p>
            )}
        </div>

Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  type="submit"
Â  Â  Â  Â  Â  disabled={isSubmitting}
Â  Â  Â  Â  Â  className="w-full py-3 bg-[#E84C3D] text-white font-semibold rounded-lg hover:bg-red-600 transition duration-300 disabled:bg-gray-400"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {isSubmitting ? "Submitting..." : "Create Petition"}
Â  Â  Â  Â  </button>
Â  Â  Â  </form>
Â  Â  </div>
Â  );
};

export default CreatePetition;